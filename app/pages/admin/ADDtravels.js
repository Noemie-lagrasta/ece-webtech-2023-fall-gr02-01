import { useState } from 'react'
import { useSupabaseClient } from '@supabase/auth-helpers-react'
import Layout from '../../components/Layout.js'
import { useUser } from '/components/UserContext.js';


export default function Page() {
  const supabase = useSupabaseClient();
  const [message, setMessage] = useState(null);
  const { user } = useUser();
  const [postDone, setPostDone] = useState(false);

  const onSubmit = async function (e) {
    e.preventDefault();
  
    const formData = new FormData(e.target);
    const data = {};
    const travelDays = formData.get('days') + ' ' + formData.get('measure');
  
    formData.forEach((value, key) => {
      data[key] = value;
    });
  
    try {
      const { data: newContact, error } = await supabase
      .from('travels')
      .upsert([{TravelerName: formData.get('TravelerName'), TravelDest: formData.get('TravelDest'),TravelCountry: formData.get('TravelCountry'),TravelDays: travelDays, TravelStory: formData.get('TravelStory'),TravelTools: formData.get('TravelTools'), Travelemail: user.email }]);
      if (error) {
        throw error;
      }
  
      // Log or handle success for the upsert
      console.log('Upsert successful:', newContact);
      setPostDone(true);
    } catch (error) {
      console.error('Error in the upsert:', error);
    }
  };
  

  return (
    <Layout
      title="Contacts"
      description="Generated by create next app"
    >

      <h1 className='wt-title'>
        Travels
      </h1>
      {postDone ? (
        <div className='wt-thanks'>
          Thanks for your new post, <br/><br/>
          Click <a href='../../travels' className='wt-titleadmin'> here</a> to see all our users' posts :
        
        </div>
      ) : (      
          <form className="[&_span]:block grid gap-3" onSubmit={onSubmit}>

            <div>
              <label>
                <span>Who traveled ? </span>
                <input type="text" name="TravelerName" className='rounded-md' placeholder='Jack STELLO' />
              </label>
            </div>
            
            <div>
              <label>
                <span>Where did you travel ?</span>
                <input type="text" name="TravelDest" className='rounded-md' placeholder='Paris'/>
                <span>Please, specify the country</span>
                <input type="text" name="TravelCountry" className='rounded-md' placeholder='France' />
              </label>
            </div>
            <div>
              <label>
                <span>How long did you stay?</span>
                <select name="days" className='rounded-md'>
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
                <option>5</option>
                <option>6</option>
                <option>7</option>
                <option>8</option>
                <option>9</option>
                <option>10</option>
                <option>11</option>
                <option>12</option>
                <option>13</option>
                </select>
                <select name="measure" className='rounded-md'>
                <option>days</option>
                <option>weeks</option>
                <option>months</option>
                </select>
              </label>
            </div>
            <div>
              <label>
                <span>How did you travel ?</span>
                <input type="radio" name="TravelTools" value="car" /> by car <br />
                <input type="radio" name="TravelTools" value="plane" /> by plane<br />
                <input type="radio" name="TravelTools" value="bpat" /> by boat<br />
                <input type="radio" name="TravelTools" value="bus" /> by bus<br />
                <input type="radio" name="TravelTools" value="train" /> by train<br />
              </label>
            </div>
            <div>
              <label>
                <span>Tell us about your trip</span>
                <textarea name="TravelStory" className='rounded-md' placeholder='It was a really good trip. I recommand it!'/>
              </label>
            </div>
            <div>
              <button
                className="rounded py-1 px-3 text-white bg-slate-500 hover:bg-blue-500"
              >
                Send
              </button>
            </div>
          </form>
             )
            }
      
          {message &&
            <div
              aria-label="Overlow below the drawer dialog"
              className="fixed inset-0 bg-black/80 flex items-center justify-center"
              onClick={() => setMessage(null)}
              role="dialog"
            >
              <div
                aria-label="Alert pane"
                className="max-h-[90vh] max-w-[95vw] overflow-auto p-4 prose bg-white"
              >
                {message}
              </div>
            </div>
          }
         
   
    </Layout>
  )
}