import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import { ChevronRightIcon } from '@heroicons/react/solid';
import Layout from '/components/Layout.js';
import { useSupabaseClient } from '@supabase/auth-helpers-react';
import { supabase } from '@/utils/supabase';

export default function Contacts() {
  const [travels, setTravels] = useState([]);
//  const supabase = useSupabaseClient();
  const [searchTerm, setSearchTerm] = useState('');

  useEffect(() => {
    const fetchTravels = async () => {
      let { data, error, status } = await supabase
        .from('travels')
        .select(`id, TravelerName, TravelDest, TravelDays, TravelStory, TravelTools`);
    
      if (searchTerm.trim() === '') {
        setTravels(data || []);
      } else { 
        let { data: searchData, error } = await supabase
          .from('travels')
          .select(`id, TravelerName, TravelDest, TravelDays, TravelStory,TravelTools`)
          .or(`TravelDest.ilike.%${searchTerm}%, TravelerName.ilike.%${searchTerm}%, TravelTools.ilike.%${searchTerm}%`);
    
        if (error) {
          console.log('Error: ', error);
        }
        // If searchData is null or empty, fetch all travels
        setTravels(searchData && searchData.length > 0 ? searchData : data || []);
      }
    };
  
    fetchTravels();
  }, [searchTerm]);

  return (
    <Layout title="Admin Contacts" description="Generated by create next app">
      <div className="mb-4">
        <input
          type="text"
          placeholder="a city, a web'tripper, way to travel ..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          className="p-2 border border-gray-300 rounded-md w-full"
        />
      </div>
      <br /><br /><br />

      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
     
          {travels.map((travel) => (
            <div key={travel.id} className="bg-white overflow-hidden shadow rounded-lg">
              <div className="p-4">
                <h3 className="text-4xl font-bold mb-2 ">{travel.TravelDest}</h3>
                <p className="text-slate-500 mb-2">{travel.TravelerName}</p>
                <p className="text-slate-500">{travel.TravelDays} </p>
                <p className='text-slate-500'>by {travel.TravelTools}</p>
                <p className="text-slate-500 mt-2">{travel.TravelStory.slice(0, 100)} ....</p>
              </div>
              <div className="p-4 flex items-center justify-center">
                <Link
                  href={`/travels/${travel.id}`}
                  className="w-5 h-5 block bg-slate-200 hover:bg-blue-500 hover:text-white rounded-full"
                >
                  <ChevronRightIcon className="h-5 w-5" aria-hidden="true" />
                </Link>
              </div>
            </div>
          ))}
        
      </div>
    </Layout>
  );
}
